version: 2.1

description: |
  Use Helm in your workflows.

executors:
  deploy:
    docker:
      - image: "jobteaser/circleci-deploy:latest"
        auth:
          username: "$DOCKER_LOGIN"
          password: "$DOCKER_PASSWORD"

jobs:
  deploy:
    parameters:
      docker-image:
        description: "The docker image to deploy."
        type: string
        default: "jobteaser/$CIRCLE_PROJECT_REPONAME"
      docker-tag:
        description: "The tag of the docker image to deploy."
        type: string
        default: "git-$CIRCLE_SHA1"
      kubernetes-namespace:
        description: "The Kubernetes namespace."
        type: string
        default: "$CIRCLE_PROJECT_REPONAME"
      kubernetes-server-endpoint:
        description: "The URL of the Kubernetes server."
        type: string
      kubernetes-deploy-timeout:
        description: "The amount of time to wait for the Kubernetes deployment to be ready."
        type: string
        default: "5m"
      kubernetes-token:
        description: "The Kubernetes token."
        type: string
        default: "$USER_K8S_TOKEN"
      helm-chart-path:
        description: "The path of the Helm chart."
        type: string
        default: "./k8s/$CIRCLE_PROJECT_REPONAME"
      helm-release-name:
        description: "The Helm release name."
        type: string
        default: "$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH"
      helm-value-file-path:
        description: "The path of the extra value file to apply."
        type: string
    executor: "deploy"
    steps:
      - checkout
      - run:
          name: "Configure the kubernetes client"
          # TODO insecure-skip-tls-verify=true !
          command: |
            kubectl config set-cluster circleci.cluster \
              --insecure-skip-tls-verify=true \
              --server=<<parameters.kubernetes-server-endpoint>>
            kubectl config set-context circleci.context \
              --cluster=circleci.cluster
            kubectl config set-credentials circleci \
              --token=<<parameters.kubernetes-token>>
            kubectl config set-context circleci.context \
              --user=circleci \
              --namespace=<<parameters.kubernetes-namespace>>
            kubectl config use-context circleci.context
      - run:
          name: "Install or upgrade the Helm release"
          command: |
            helm upgrade <<parameters.helm-release-name>> \
              --tiller-namespace=<<parameters.kubernetes-namespace>> \
              --namespace=<<parameters.kubernetes-namespace>> \
              --install \
              --set=image=<<parameters.docker-image>>:<<parameters.docker-tag>> \
              -f <<parameters.helm-value-file-path>> \
              <<parameters.helm-chart-path>>
      - run:
          name: "Wait for the deployment to succeed"
          command: |
            kubectl rollout status deploy/<<parameters.helm-release-name>> \
              --timeout=<<parameters.kubernetes-deploy-timeout>>
