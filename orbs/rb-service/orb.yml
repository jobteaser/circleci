version: 2.1

description: |
  Standard jobs for services using the rb-service Ruby module.

orbs:
  service: "jobteaser/service@dev:master"
  docker: "jobteaser/docker@dev:master"

executors:
  ci:
    # We should avoid using latest image tag.
    # Prefer using specific tag to avoid breaking your CI when a breaking change in the image occurs.
    docker:
      - image: "jobteaser/rb-service-ci:<<parameters.tag>>"
        auth:
          username: "$DOCKER_LOGIN"
          password: "$DOCKER_PASSWORD"
    parameters:
      tag:
        default: 'latest'
        description: >
          Pick a specific jobteaser/rb-service-ci image version tag
        type: string

commands:
  save_ruby_bundle_cache:
    steps:
      - save_cache:
          key: $CIRCLE_PROJECT_REPONAME-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"
            - "vendor/cache"

  restore_ruby_bundle_cache:
    steps:
      - restore_cache:
          keys:
            - $CIRCLE_PROJECT_REPONAME-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - $CIRCLE_PROJECT_REPONAME-v3-{{ .Branch }}
            - $CIRCLE_PROJECT_REPONAME-v3-

jobs:
  test:
    parameters:
      executor:
        description: "The executor to use for the job."
        type: "executor"
        default: "ci"
      before_test:
        description: "A shell command to execute before running the test suite."
        type: "string"
        default: "true"
      after_test:
        description: "A shell command to execute after running the test suite."
        type: "string"
        default: "true"
    executor: "<<parameters.executor>>"
    steps:
      - service/configure_ssh
      - checkout
      - restore_ruby_bundle_cache
      - run:
          name: "Install dependencies"
          command: |
            bundle config set path "vendor/bundle"
            bundle install --retry=3 --jobs=2 --no-color
      - save_ruby_bundle_cache
      - run:
          name: "Run tests"
          command: |
            <<parameters.before_test>>
            bundle exec rake test
            <<parameters.after_test>>
      - save_ruby_bundle_cache
      - store_artifacts:
          path: scenarios.html

  build:
    parameters:
      executor:
        description: "The executor to use for the job."
        type: "executor"
        default: "ci"
    executor: "<<parameters.executor>>"
    steps:
      - service/configure_ssh
      - checkout
      - restore_ruby_bundle_cache
      - run:
          name: "Install dependencies"
          command: |
            bundle config set path "vendor/bundle"
            bundle install --retry=3 --jobs=2 --no-color
      - service/generate_build_info
      - docker/setup
      - docker/login
      - docker/build_image
      - docker/check_image_trivy
      - docker/push_image
