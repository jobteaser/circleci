#!/usr/bin/env bash
# This script creates a pull request on GitHub with updated locales from PhraseApp,
# bypassing the need for human intervention via PhraseApp "GitHub Sync" feature.

PHRASEAPP_PROJECT_ID=$1
PHRASEAPP_ACCESS_TOKEN=$2
GITHUB_PR_AUTOMATION_TOKEN=$3
GITHUB_USER_EMAIL=$4
BRANCH_NAME=$5


git config --global user.email "$GITHUB_USER_EMAIL"

# Delete a phraseapp-locales branch if it exists and update master branch
echo "Deleting the defined BRANCH_NAME branch if it exists..."
git push origin --delete "$BRANCH_NAME"
git fetch origin && git checkout master && git reset --hard origin/master


## Update .phrase.yml file to use phrase-cli
sed -i.bak "s/PHRASEAPP_PROJECT_ID/$PHRASEAPP_PROJECT_ID/g" .phrase.yml
sed -i.bak "s/PHRASEAPP_ACCESS_TOKEN/$PHRASEAPP_ACCESS_TOKEN/g" .phrase.yml


## Download the newest locale files from PhraseApp
echo "Downloading the latest locale files from PhraseApp..."
phrase pull


# if there are some changes, push them to GitHub and create a pull request
# exclude .phrase.yml file from the diff since it was updated just before
git diff --exit-code -- . ":(exclude).phrase.yml"

if [[ $? == 0 ]]; then
  echo "No locales have been changed."
  exit 0
else
  git checkout -b "$BRANCH_NAME"

  ## Add only the locale directory to the changes to be committed.
  git add "$(grep -A2 'pull:' .phrase.yml | tail -n1 | awk '{ print $3}' | sed s/"<locale_name>.*"//)"
  git commit -m "Updated translations from Phrase"
  git push origin "$BRANCH_NAME"

  echo "Attempting to create a PhraseApp pull request with locale updates..."
    response_code=$(curl -X POST \
      -w "%{response_code}\n" --silent --output "/dev/null" \
      -H "Authorization: token $GITHUB_PR_AUTOMATION_TOKEN" \
      "https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls" \
      -d '{"title":"Updated translations from Phrase","body":"Exported the most recent locale files from Phrase.","head":"'"$BRANCH_NAME"'","base":"'"$CIRCLE_BRANCH"'"}'
    )

  echo "https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls"
  echo "GitHub responded with: $response_code"

  if [[ $response_code != 201 ]]; then
    echo "PhraseApp pull request could not have been created."
    exit 1
  fi

  echo "PhraseApp pull request has been successfully created."
fi
