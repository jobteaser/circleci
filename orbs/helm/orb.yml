version: 2.1

description: |
  Use Helm in your workflows.

executors:
  deploy:
    docker:
      - image: "jobteaser/circleci-helm-deploy:latest"
        auth:
          username: "$DOCKER_LOGIN"
          password: "$DOCKER_PASSWORD"

commands:
  tag_deployment:
    parameters:
      environment:
        description: "The runtime environment."
        type: string
        default: "prod"
    steps:
      - run:
          name: "Configure Git"
          command: |
            git config --global user.email "dev@jobteaser.com"
            git config --global user.name "Jobtomate CircleCI"
      - run:
          name: "Tag the deployment"
          command: |
            tag="deployment-<<parameters.environment>>-$(date -u +'%Y%m%d%H%M%S')"
            git tag $tag
            git push origin $tag

jobs:
  deploy:
    parameters:
      environment:
        description: "The runtime environment."
        type: string
        default: "prod"
      docker_image:
        description: "The docker image to deploy."
        type: string
        default: "jobteaser/$CIRCLE_PROJECT_REPONAME"
      docker_tag:
        description: "The tag of the docker image to deploy."
        type: string
        default: "git-$CIRCLE_SHA1"
      kubernetes_namespace:
        description: "The Kubernetes namespace."
        type: string
        default: "$CIRCLE_PROJECT_REPONAME"
      kubernetes_deployment:
        description: "The name of the Kubernetes deployment."
        type: string
        default: "$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH"
      kubernetes_endpoint:
        description: "The URL of the Kubernetes API endpoint."
        type: string
        default: "$K8S_ENDPOINT"
      kubernetes_ca_cert:
        description: "The CA certificate of the Kubernetes API server."
        type: string
        default: "$K8S_CA_CERT_PREPROD"
      kubernetes_deploy_timeout:
        description: "The amount of time to wait for the Kubernetes deployment to be ready."
        type: string
        default: "5m"
      kubernetes_user_token:
        description: "The Kubernetes user token."
        type: string
        default: "$K8S_USER_TOKEN_PREPROD"
      helm_chart_path:
        description: "The path of the Helm chart."
        type: string
        default: "./k8s/$CIRCLE_PROJECT_REPONAME"
      helm_release_name:
        description: "The Helm release name."
        type: string
        default: "$CIRCLE_PROJECT_REPONAME-$CIRCLE_BRANCH"
      helm_value_file_path:
        description: "The path of the extra value file to apply."
        type: string
        default: "./k8s/$CIRCLE_PROJECT_REPONAME/$HELM_VALUE_FILE_NAME"
      tag_deployment:
        description: "Whether to create a deployment Git tag or not."
        type: boolean
        default: false
    executor: "deploy"
    steps:
      - checkout
      - run:
          name: "Configure the kubernetes client"
          command: |
            echo "<<parameters.kubernetes_ca_cert>>" | base64 -d >/tmp/k8s-ca-cert.pem
            kubectl config set-cluster circleci.cluster \
              --certificate-authority=/tmp/k8s-ca-cert.pem \
              --server=<<parameters.kubernetes_endpoint>>
            kubectl config set-context circleci.context \
              --cluster=circleci.cluster
            kubectl config set-credentials circleci \
              --token=<<parameters.kubernetes_user_token>>
            kubectl config set-context circleci.context \
              --user=circleci \
              --namespace=<<parameters.kubernetes_namespace>>
            kubectl config use-context circleci.context
      - run:
          name: "Initialize Helm"
          command: |
            cd <<parameters.helm_chart_path>>
            helm init --client-only
            helm repo add jobteaser https://jobteaser.github.io/charts
            helm dep update
      - run:
          name: "Install or upgrade the Helm release"
          command: |
            helm upgrade <<parameters.helm_release_name>> \
              --tiller-namespace=<<parameters.kubernetes_namespace>> \
              --namespace=<<parameters.kubernetes_namespace>> \
              --install \
              --set=image=<<parameters.docker_image>>:<<parameters.docker_tag>> \
              -f <<parameters.helm_value_file_path>> \
              <<parameters.helm_chart_path>>
      - run:
          name: "Wait for the deployment to succeed"
          command: |
            kubectl rollout status deploy/<<parameters.kubernetes_deployment>> \
              --timeout=<<parameters.kubernetes_deploy_timeout>>
      - when:
          condition: <<parameters.tag_deployment>>
          steps:
            - tag_deployment:
                environment: "<<parameters.environment>>"
